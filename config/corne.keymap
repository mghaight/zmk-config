/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 6 7 8 9 10 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 >; 
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38 >; 
            hold-trigger-on-release;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------
// |  ESC |   Q   |   W   |   E   |   R   |  T  |   |  Y  |   U   |   I   |   O   |   P   | BSPC |
// | CTRL | ctr/A | alt/S | gui/D | shf/F |  G  |   |  H  | shf/J | gui/K | alt/L | ctr/; |  '   |
// | SHFT |   Z   |   X   |   C   |   V   |  B  |   |  N  |   M   |   ,   |   .   |   /   | TAB  |
//                        |  GUI  |  LWR  | ENT |   | SPC |  RSE  |  ALT  |
                        bindings = <
   &kp ESC   &kp Q        &kp W       &kp E       &kp R         &kp T       &kp Y     &kp U         &kp I       &kp O       &kp P           &kp BSPC
   &kp LCTRL &hml LCTRL A &hml LALT S &hml LGUI D &hml LSHIFT F &kp G       &kp H     &hmr RSHIFT J &hmr RGUI K &hmr RALT L &hmr RCTRL SEMI &kp SQT
   &kp LSHFT &kp Z        &kp X       &kp C       &kp V         &kp B       &kp N     &kp M         &kp COMMA   &kp DOT     &kp FSLH        &kp TAB
                                      &kp LGUI    &mo 1         &kp RET     &kp SPACE &mo 2         &kp RALT
                        >;
                };
                lower_layer {
// ---------------------------------------------------------------------------------------------------
// |  ESC |     |   7   |   8   |   9   |  0  |   |      |   PRV   |   PLY  |   NXT   |       | BSPC |
// | CTRL | ctr | alt/4 | gui/5 | shf/6 |     |   | LFT  | shf/DWN | gui/UP | alt/RGT |  ctr  | BT1  |
// | SHFT |     |   1   |   2   |   3   |     |   |      |  volDN  |  volUP |   MUTE  | BTCLR | BT2  |
//                      |  GUI  |       |     |   | BSPC |         |   ALT  |
                        bindings = <
   &kp ESC    &trans       &kp N7       &kp N8        &kp N9	     &kp N0         &trans    &kp C_PREV	&kp C_PP     &kp C_NEXT      &trans     &kp BSPC
   &kp LCTRL  &kp LCTRL	   &hml LALT N4 &hml LGUI N5  &hml LSHIFT N6 &trans	    &kp LEFT  &hmr RSHIFT DOWN	&hmr RGUI UP &hmr RALT RIGHT &kp RCTRL  &bt BT_SEL 0
   &kp LSHFT  &trans       &kp N1       &kp N2        &kp N3         &trans         &trans    &kp C_VOL_DN 	&kp C_VOL_UP &kp C_MUTE      &bt BT_CLR &bt BT_SEL 1
                                        &kp LGUI      &trans         &trans         &kp BSPC  &trans       	&kp RALT
                        >;
                };

                raise_layer {
// -------------------------------------------------------------------------------------
// |  ESC |     |   &   |   8   |   (   |  )  |   |     |       |       |       |         | BSPC |
// | CTRL | ctr | alt/$ | gui/% | shf/^ |     |   |  -  | shf/= | gui/[ | alt/] | ctr/"\" |  `   |
// | SHFT |     |   !   |   @   |   #   |     |   |  _  |   +   |   {   |   }   |   "|"   |  ~   |
//                      |  GUI  |       | TAB |   |     |       |  ALT  |
                        bindings = <
   &kp  ESC  &trans    &kp AMPS	      &kp ASTRK       &kp LPAR          &kp RPAR    &trans    &trans            &trans          &trans         &trans          &kp BSPC
   &kp LCTRL &kp LCTRL &hml LALT DLLR &hml LGUI PRCNT &hml LSHIFT CARET &trans      &kp MINUS &hmr RSHIFT EQUAL &hmr RGUI LBKT  &hmr RALT RBKT &hmr RCTRL BSLH &kp GRAVE
   &kp LSHFT &trans    &kp EXCL       &kp AT          &kp HASH          &trans      &kp UNDER &kp PLUS          &kp LBRC        &kp RBRC       &kp PIPE        &kp TILDE
                                      &kp LGUI        &trans            &kp TAB     &trans    &trans            &kp RALT
                        >;
                };
        };
};
